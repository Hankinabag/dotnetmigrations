= 0.83 / 2011-08-26

    * Added preliminary support for Mono. (Not guaranteed or tested well. Let us know what happens.)
    * Fixed issue #21 with migrations not working past version 9.
    * Breaking change! The ##DNM:PROVIDER## token is now /*DNM:PROVIDER*/
      The new token format will help ensure that your SQL scripts will run without errors
      outside of DNM.
    * Added support for a `CommandTimeout` parameter in the connection strings.
      This value will be used as the `DbCommand.CommandTimeout` value when the migration scripts are executed.
    
    Upgrade Notes:
    * Run the following against your database to ensure issue #21 is fixed.
      This will change the [schema_migrations].[version] column from [varchar] to [int].
      `ALTER TABLE [schema_migrations] ALTER COLUMN [version] [int] NOT NULL`

= 0.82 / 2011-04-12

    * Added support for post migration actions that plugins can use
	  to inject functionality that should run after a migration completes.
	  (This was added to support the new PersistentMigrate [pmigrate] command
	  in the dotnetmigrations-contrib project.)

= 0.81 / 2011-04-11

    * New 'seed' command that executes scripts in the .\seeds\ folder.

	* New 'setup' command that migrates a database to the latest version
	  and executes scripts in the seed folder.
	  
	  This is the same as running:
	  > db migrate myConnection
	  > db seed myConnection

= 0.80 / 2011-03-30

    * New sequential number 'seq_num' versioning strategy

    * Added support for a ##DNM:PROVIDER## token in migration scripts that is
      replaced with the connection string's provider name.

    * Added support for migration scripts without placeholders. When the script
      doesn't have any BEGIN_SETUP/END_SETUP/BEGIN_TEARDOWN/END_TEARDOWN tags
      then the entire script is assumed to be a Setup with no Teardown.

= 0.70 / 2010-08-28

	This release brings yet another significant rewrite. Building
	on the MEF integration and innovations of 0.6, many improvements
	have been made to make writing commands easier and safer.

	* New 'connections' command that provides a command line interface
	  for viewing, adding, editing and removing stored connection
	  strings in the config file.

	* Revamped help system that provides detailed info on the
	  usage of all commands, including custom commands.

	* Smarter, more robust parsing of migrations scripts that contain
	  GO keywords. Special thanks to the Subtext project who we
	  borrowed these improvements from!
	
	* New strongly-typed parsing of command line arguments with
	  support DataAnnotation attributes for validation and
	  automatic integration with the help system.
	
	* New CommandBase and DatabaseCommandBase classes for building
	  custom commands.
	  
	* Rewritten data access routines that wrap all bulk operations
	  in transactions. Also much smarter database connection
	  handling.
	
	* Beefed up unit tests suite with full coverage of all critical
	  routines.

	* Changed unit tests to use SQL Server CE 3.5.1 instead of
	  SQL Server Express. This means anyone can run the unit tests
	  now without having to setup a database first.

	* Major updates to the build script to use Psake instead of NAnt
	  to run the unit tests after compilation and improvements for
	  integrating with TeamCity.
	  
	* Lots of bug fixes.

= 0.60 / 2010-01-28

	This version has been completely rewritten from the ground up using
	.Net 3.5 and the Managed Extensibility Framework.
	
	* Completely new directory structure and codebase
	
	* MEF has been used to assist in the inner workings of the application
	  as well as allow for new logs and commands to be created.
	
	* Unit Tests Project has been added - tests use the NUnit framework
	
	* An automated build file has been created for NAnt v0.86 b1
	
	* Core project has been created to allow for easy access to classes
	  required for extending DotNetMigrations
	
	* BREAKING CHANGE: BulkCopy Command has been removed.
	  The BulkCopy command has temporarily been removed from the bundled
	  commands of the application. This command will be moved to the
	  DotNetMigrations-Contrib project as soon as it's ready. If you use
	  the bulkcopy command, please continue using v0.5.
	  
	== Notes about the DotNetMigrations-Contrib Project
	Thanks to the Managed Extensibility Framework, DotNetMigrations is
	now able to have new commands and logging mechanisms to be created
	and added by anyone who wants. Because of this, the
	DotNetMigrations-Contrib project is being launched in the very near
	future (target launch date is Feb 01, 2010). The goal of this sister
	project is to provide a location for people to share new commands
	and logs to the application without having to worry about getting a
	different version of the core DotNetMigrations application from
	this project.

= 0.50 / 2008-05-21

	* fixed bug where blank lines before a "GO" in the migration script would
	  cause an exception to be thrown

	* refactored the code for each 'command' into individual classes that inherit
	  from a base ConsoleCommand class.

	* fixed bug that caused a sql error to be thrown whenever the schema_info
	  table did not exist

	* added "bulkload" command

	* added return codes to the application

= 0.40 / 2008-05-08

	* fixed bug where lines in the SQL migration script were being
	  concatenated together without any whitespace to separate them

= 0.30

	* uses DbProviderFactories to perform all database connections
	  default provider is System.Data.SqlClient
	  you can specify a specific provider by adding a "PROVIDER=" setting
	  to your connection string
	  ex. "PROVIDER=System.Data.SqlClient;SERVER=(local);DATABASE=TEST123"

	* misc updates made to specifically support SQL Compact 3.5 databases

= 0.20

	* added "version" command

= 0.10

	* initial release